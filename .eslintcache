[{"/home/austin/Desktop/side_projects/simple_weather_app/src/index.js":"1","/home/austin/Desktop/side_projects/simple_weather_app/src/components/App.js":"2","/home/austin/Desktop/side_projects/simple_weather_app/src/components/MainTile.js":"3","/home/austin/Desktop/side_projects/simple_weather_app/src/components/CurrentWeatherTile.js":"4","/home/austin/Desktop/side_projects/simple_weather_app/src/components/CurrentWeatherTempTile.js":"5","/home/austin/Desktop/side_projects/simple_weather_app/src/components/CurrentWeatherLocationTile.js":"6","/home/austin/Desktop/side_projects/simple_weather_app/src/WeatherApiInfo.js":"7","/home/austin/Desktop/side_projects/simple_weather_app/src/DefaultData.js":"8","/home/austin/Desktop/side_projects/simple_weather_app/src/FetchWeatherData.js":"9","/home/austin/Desktop/side_projects/simple_weather_app/src/components/OptionsBar.js":"10"},{"size":244,"mtime":1611341427607,"results":"11","hashOfConfig":"12"},{"size":1710,"mtime":1611467650783,"results":"13","hashOfConfig":"12"},{"size":519,"mtime":1611466899559,"results":"14","hashOfConfig":"12"},{"size":748,"mtime":1611469179367,"results":"15","hashOfConfig":"12"},{"size":615,"mtime":1611354119266,"results":"16","hashOfConfig":"12"},{"size":469,"mtime":1611354250768,"results":"17","hashOfConfig":"12"},{"size":104,"mtime":1611346087238,"results":"18","hashOfConfig":"12"},{"size":41580,"mtime":1611354503046,"results":"19","hashOfConfig":"12"},{"size":919,"mtime":1611466658370,"results":"20","hashOfConfig":"12"},{"size":507,"mtime":1611471360913,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"10tobow",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/austin/Desktop/side_projects/simple_weather_app/src/index.js",[],["45","46"],"/home/austin/Desktop/side_projects/simple_weather_app/src/components/App.js",["47","48","49","50"],"import React, { useState, useEffect } from \"react\";\nimport \"../css/App.css\";\nimport MainTile from \"./MainTile\";\nimport FetchWeatherData from \"../FetchWeatherData\";\nimport DefaultData from \"../DefaultData\";\n\nconst App = () => {\n    const getCurrentConditions = () => {\n        const { current } = currentLocationData;\n        const dayConditions = currentLocationData.forecast.forecastday[0].day;\n        const { mintemp_f, maxtemp_f, mintemp_c, maxtemp_c } = dayConditions;\n        [\n            current.mintemp_f,\n            current.maxtemp_f,\n            current.mintemp_c,\n            current.maxtemp_c,\n        ] = [mintemp_f, maxtemp_f, mintemp_c, maxtemp_c];\n\n        return current;\n    };\n\n    const getForecast = () => {\n        return currentLocationData.forecast;\n    };\n\n    const updateLocation = (newLocation) => {\n        if (newLocation === currentLocation) {\n            return;\n        } else {\n            setLocation(newLocation);\n        }\n    };\n\n    const [currentLocation, setLocation] = useState(DefaultData.location.name);\n    const [currentLocationData, setLocationData] = useState(DefaultData);\n    const [forecast, setForecast] = useState(DefaultData.forecast);\n    const [currentConditions, setCurrentConditions] = useState(\n        getCurrentConditions()\n    );\n\n    useEffect(() => {\n        FetchWeatherData(\"New York\", setLocationData);\n    }, [currentLocation]);\n\n    console.log(currentLocationData);\n    return (\n        <div className=\"app\">\n            <MainTile\n                currentConditions={currentConditions}\n                forecast={forecast}\n                location={currentLocationData.location}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","/home/austin/Desktop/side_projects/simple_weather_app/src/components/MainTile.js",[],"/home/austin/Desktop/side_projects/simple_weather_app/src/components/CurrentWeatherTile.js",[],"/home/austin/Desktop/side_projects/simple_weather_app/src/components/CurrentWeatherTempTile.js",[],"/home/austin/Desktop/side_projects/simple_weather_app/src/components/CurrentWeatherLocationTile.js",[],"/home/austin/Desktop/side_projects/simple_weather_app/src/WeatherApiInfo.js",[],"/home/austin/Desktop/side_projects/simple_weather_app/src/DefaultData.js",[],"/home/austin/Desktop/side_projects/simple_weather_app/src/FetchWeatherData.js",["51"],"import WeatherApiInfo from \"./WeatherApiInfo\";\nimport DefaultData from \"./DefaultData\";\n\nconst FetchWeatherData = async (location, setLocationData) => {\n    const api_key = WeatherApiInfo.key;\n    const baseRequestURL = \"http://api.weatherapi.com/v1\";\n    const forecastEndpoint = \"/forecast.json\";\n    if (typeof location == \"undefined\" || location == null) {\n        location = \"auto:ip\";\n    }\n    const dayCount = 1;\n\n    let forecastRequest = new Request(\n        `${baseRequestURL}${forecastEndpoint}?key=${api_key}&q=${location}&days=${dayCount}`\n    );\n\n    try {\n        const response = await fetch(forecastRequest);\n        if (!response.ok) {\n            console.log(\"request failed\");\n            return;\n        }\n        let data = await response.json();\n        setLocationData(data);\n        return;\n    } catch (err) {\n        console.log(\"error occurred\");\n    }\n};\n\nexport default FetchWeatherData;\n","/home/austin/Desktop/side_projects/simple_weather_app/src/components/OptionsBar.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":22,"column":11,"nodeType":"58","messageId":"59","endLine":22,"endColumn":22},{"ruleId":"56","severity":1,"message":"60","line":26,"column":11,"nodeType":"58","messageId":"59","endLine":26,"endColumn":25},{"ruleId":"56","severity":1,"message":"61","line":36,"column":22,"nodeType":"58","messageId":"59","endLine":36,"endColumn":33},{"ruleId":"56","severity":1,"message":"62","line":37,"column":31,"nodeType":"58","messageId":"59","endLine":37,"endColumn":51},{"ruleId":"56","severity":1,"message":"63","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":19},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'getForecast' is assigned a value but never used.","Identifier","unusedVar","'updateLocation' is assigned a value but never used.","'setForecast' is assigned a value but never used.","'setCurrentConditions' is assigned a value but never used.","'DefaultData' is defined but never used.","no-global-assign","no-unsafe-negation"]