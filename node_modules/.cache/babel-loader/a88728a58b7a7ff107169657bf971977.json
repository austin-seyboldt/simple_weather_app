{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/austin/Desktop/side_projects/simple_weather_app/src/components/MenuSearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../css/Menu.css\";\nimport MenuDropDownBox from \"./MenuDropDownBox\";\nimport TestData from \"../TestData\";\nimport WeatherApiInfo from \"../WeatherApiInfo\";\n\nconst MenuSearchBar = ({\n  updateLocation\n}) => {\n  _s();\n\n  const [newLocation, setNewLocation] = useState(\"\");\n  const [locationHints, setLocationHints] = useState([]);\n\n  const handleSubmit = () => {\n    const searchBox = document.getElementById(\"menu__search__box\");\n    setNewLocation(searchBox.value);\n    searchBox.value = \"\";\n    return false;\n  };\n\n  useEffect(() => {\n    updateLocation(newLocation);\n    console.log(\"in use effect\", newLocation);\n  }, [newLocation]);\n\n  const handleHintClick = location => {\n    setNewLocation(`${location.name},${location.region}`);\n    setLocationHints([]);\n    document.getElementById(\"menu__search__box\").value = \"\";\n  };\n\n  const getLocationHints = async location => {\n    console.log(\"sending autocomplete request...\");\n    let response;\n\n    try {\n      const requestURL = `${WeatherApiInfo.baseRequestURL}${WeatherApiInfo.autoCompleteEndpoint}?key=${WeatherApiInfo.key}&q=${location}`;\n      const hintRequest = new Request(requestURL);\n      response = await fetch(hintRequest);\n\n      if (!response.ok) {\n        return;\n      }\n\n      response = await response.json();\n    } catch (error) {\n      console.log(\"error occurred fetching autocomplete data\", error);\n      return;\n    }\n\n    setLocationHints(response);\n  };\n\n  const handleSearchChange = () => {\n    const searchBox = document.getElementById(\"menu__search__box\");\n\n    if (searchBox.value.length < 3) {\n      return;\n    }\n\n    getLocationHints(searchBox.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu__search__bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu__search__bar--container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"search__drop__down--wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"search__input\",\n          id: \"menu__search__box\",\n          placeholder: \"Search for a new location...\",\n          autoComplete: \"off\",\n          onKeyPress: e => e.key == \"Enter\" ? handleSubmit() : null,\n          onChange: () => handleSearchChange()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), locationHints.map(hint => {\n          return /*#__PURE__*/_jsxDEV(MenuDropDownBox, {\n            location: hint,\n            handleClick: handleHintClick\n          }, locationHints.findIndex(hint), false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuSearchBar, \"IKfGdEmevvhVekCpdX5ArE1Eiwk=\");\n\n_c = MenuSearchBar;\nexport default MenuSearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuSearchBar\");","map":{"version":3,"sources":["/home/austin/Desktop/side_projects/simple_weather_app/src/components/MenuSearchBar.js"],"names":["React","useEffect","useState","MenuDropDownBox","TestData","WeatherApiInfo","MenuSearchBar","updateLocation","newLocation","setNewLocation","locationHints","setLocationHints","handleSubmit","searchBox","document","getElementById","value","console","log","handleHintClick","location","name","region","getLocationHints","response","requestURL","baseRequestURL","autoCompleteEndpoint","key","hintRequest","Request","fetch","ok","json","error","handleSearchChange","length","e","map","hint","findIndex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../css/Menu.css\";\nimport MenuDropDownBox from \"./MenuDropDownBox\";\nimport TestData from \"../TestData\";\nimport WeatherApiInfo from \"../WeatherApiInfo\";\n\nconst MenuSearchBar = ({ updateLocation }) => {\n    const [newLocation, setNewLocation] = useState(\"\");\n    const [locationHints, setLocationHints] = useState([]);\n\n    const handleSubmit = () => {\n        const searchBox = document.getElementById(\"menu__search__box\");\n        setNewLocation(searchBox.value);\n        searchBox.value = \"\";\n\n        return false;\n    };\n\n    useEffect(() => {\n        updateLocation(newLocation);\n        console.log(\"in use effect\", newLocation);\n    }, [newLocation]);\n\n    const handleHintClick = (location) => {\n        setNewLocation(`${location.name},${location.region}`);\n        setLocationHints([]);\n        document.getElementById(\"menu__search__box\").value = \"\";\n    };\n\n    const getLocationHints = async (location) => {\n        console.log(\"sending autocomplete request...\");\n        let response;\n        try {\n            const requestURL = `${WeatherApiInfo.baseRequestURL}${WeatherApiInfo.autoCompleteEndpoint}?key=${WeatherApiInfo.key}&q=${location}`;\n            const hintRequest = new Request(requestURL);\n            response = await fetch(hintRequest);\n            if (!response.ok) {\n                return;\n            }\n            response = await response.json();\n        } catch (error) {\n            console.log(\"error occurred fetching autocomplete data\", error);\n            return;\n        }\n        setLocationHints(response);\n    };\n\n    const handleSearchChange = () => {\n        const searchBox = document.getElementById(\"menu__search__box\");\n        if (searchBox.value.length < 3) {\n            return;\n        }\n        getLocationHints(searchBox.value);\n    };\n\n    return (\n        <div className=\"menu__search__bar\">\n            <div className=\"menu__search__bar--container\">\n                <ul className=\"search__drop__down--wrapper\">\n                    <input\n                        type=\"text\"\n                        name=\"search__input\"\n                        id=\"menu__search__box\"\n                        placeholder=\"Search for a new location...\"\n                        autoComplete=\"off\"\n                        onKeyPress={(e) =>\n                            e.key == \"Enter\" ? handleSubmit() : null\n                        }\n                        onChange={() => handleSearchChange()}\n                    />\n                    {locationHints.map((hint) => {\n                        return (\n                            <MenuDropDownBox\n                                key={locationHints.findIndex(hint)}\n                                location={hint}\n                                handleClick={handleHintClick}\n                            />\n                        );\n                    })}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default MenuSearchBar;\n"]},"metadata":{},"sourceType":"module"}