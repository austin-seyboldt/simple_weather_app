{"ast":null,"code":"import WeatherApiInfo from \"./WeatherApiInfo\";\nimport DefaultData from \"./DefaultData\";\n\nconst FetchWeatherData = async (location, setLocationData) => {\n  const api_key = WeatherApiInfo.key;\n  const baseRequestURL = \"http://api.weatherapi.com/v1\";\n  const forecastEndpoint = \"/forecast.json\";\n\n  if (typeof location == \"undefined\" || location == null) {\n    location = \"auto:ip\";\n  }\n\n  const dayCount = 1;\n  let forecastRequest = new Request(`${baseRequestURL}${forecastEndpoint}?key=${api_key}&q=${location}&days=${dayCount}`);\n\n  try {\n    const response = await fetch(forecastRequest);\n\n    if (!response.ok) {\n      console.log(\"request failed\");\n      return;\n    }\n\n    let data = await response.json();\n    setLocationData(data);\n    return;\n  } catch (err) {\n    console.log(\"error occurred\");\n  }\n};\n\n_c = FetchWeatherData;\nexport default FetchWeatherData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchWeatherData\");","map":{"version":3,"sources":["/home/austin/Desktop/side_projects/simple_weather_app/src/FetchWeatherData.js"],"names":["WeatherApiInfo","DefaultData","FetchWeatherData","location","setLocationData","api_key","key","baseRequestURL","forecastEndpoint","dayCount","forecastRequest","Request","response","fetch","ok","console","log","data","json","err"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAgB,GAAG,OAAOC,QAAP,EAAiBC,eAAjB,KAAqC;AAC1D,QAAMC,OAAO,GAAGL,cAAc,CAACM,GAA/B;AACA,QAAMC,cAAc,GAAG,8BAAvB;AACA,QAAMC,gBAAgB,GAAG,gBAAzB;;AACA,MAAI,OAAOL,QAAP,IAAmB,WAAnB,IAAkCA,QAAQ,IAAI,IAAlD,EAAwD;AACpDA,IAAAA,QAAQ,GAAG,SAAX;AACH;;AACD,QAAMM,QAAQ,GAAG,CAAjB;AAEA,MAAIC,eAAe,GAAG,IAAIC,OAAJ,CACjB,GAAEJ,cAAe,GAAEC,gBAAiB,QAAOH,OAAQ,MAAKF,QAAS,SAAQM,QAAS,EADjE,CAAtB;;AAIA,MAAI;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,eAAD,CAA5B;;AACA,QAAI,CAACE,QAAQ,CAACE,EAAd,EAAkB;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA;AACH;;AACD,QAAIC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAjB;AACAd,IAAAA,eAAe,CAACa,IAAD,CAAf;AACA;AACH,GATD,CASE,OAAOE,GAAP,EAAY;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,CAzBD;;KAAMd,gB;AA2BN,eAAeA,gBAAf","sourcesContent":["import WeatherApiInfo from \"./WeatherApiInfo\";\nimport DefaultData from \"./DefaultData\";\n\nconst FetchWeatherData = async (location, setLocationData) => {\n    const api_key = WeatherApiInfo.key;\n    const baseRequestURL = \"http://api.weatherapi.com/v1\";\n    const forecastEndpoint = \"/forecast.json\";\n    if (typeof location == \"undefined\" || location == null) {\n        location = \"auto:ip\";\n    }\n    const dayCount = 1;\n\n    let forecastRequest = new Request(\n        `${baseRequestURL}${forecastEndpoint}?key=${api_key}&q=${location}&days=${dayCount}`\n    );\n\n    try {\n        const response = await fetch(forecastRequest);\n        if (!response.ok) {\n            console.log(\"request failed\");\n            return;\n        }\n        let data = await response.json();\n        setLocationData(data);\n        return;\n    } catch (err) {\n        console.log(\"error occurred\");\n    }\n};\n\nexport default FetchWeatherData;\n"]},"metadata":{},"sourceType":"module"}